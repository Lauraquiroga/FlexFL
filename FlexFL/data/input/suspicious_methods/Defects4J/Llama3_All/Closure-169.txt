com.google.javascript.rhino.jstype.RecordType.isSubtype(ObjectType,RecordType)
com.google.javascript.rhino.jstype.PrototypeObjectType.matchConstraint(JSType)
com.google.javascript.rhino.jstype.ArrowType.checkArrowEquivalenceHelper(ArrowType,boolean)
com.google.javascript.rhino.jstype.PrototypeObjectType.matchRecordTypeConstraint(ObjectType)
com.google.javascript.rhino.jstype.RecordType.checkRecordEquivalenceHelper(RecordType,boolean)
com.google.javascript.rhino.jstype.PrototypeObjectType.matchRecordTypeConstraint(ObjectType)
com.google.javascript.rhino.jstype.JSType.isInvariant(JSType)
com.google.javascript.rhino.jstype.RecordType.isSubtype(JSType)
com.google.javascript.rhino.jstype.RecordType.isSubtype(ObjectType,RecordType)
com.google.javascript.rhino.jstype.RecordType.toMaybeRecordType()
com.google.javascript.jscomp.ProcessTweaks.TweakInfo.emitAllTypeWarnings()
com.google.javascript.jscomp.ProcessTweaks.applyCompilerDefaultValueOverrides(Map<String,TweakInfo>)
com.google.javascript.jscomp.ProcessTweaks.CollectTweaks.visit(NodeTraversal,Node,Node)
com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter.RestrictByTrueInstanceOfResultVisitor.caseUnknownType()
com.google.javascript.jscomp.DisambiguateProperties.ConcreteTypeSystem.getFunctionScope(Node)
com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter.getRestrictedByTypeOfResult(JSType,String,boolean)
com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter.getRestrictedWithoutNull(JSType)
com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter.getRestrictedWithoutUndefined(JSType)
com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter.getTypeIfRefinable(Node,FlowScope)
com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter.getNativeTypeForTypeOf(String)