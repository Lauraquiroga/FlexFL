com.fasterxml.jackson.databind.type.ReferenceType.buildCanonicalName()
com.fasterxml.jackson.databind.deser.std.UUIDDeserializer._badChar(String,int,DeserializationContext,char)
com.fasterxml.jackson.databind.type.TypeFactory._resolveTypePlaceholders(JavaType,JavaType)
com.fasterxml.jackson.databind.type.MapLikeType.buildCanonicalName()
com.fasterxml.jackson.databind.type.TypeFactory._bindingsForSubtype(JavaType,int,Class<?>)
com.fasterxml.jackson.databind.type.MapLikeType.buildCanonicalName()
com.fasterxml.jackson.databind.type.ReferenceType.buildCanonicalName()
com.fasterxml.jackson.databind.type.TypeBindings.create(Class<?>,List<JavaType>)
com.fasterxml.jackson.databind.type.TypeParser.parseTypes(MyTokenizer)
com.fasterxml.jackson.databind.type.TypeParser.MyTokenizer.pushBack(String)
com.fasterxml.jackson.databind.type.TypeFactory.constructFromCanonical(String)
com.fasterxml.jackson.databind.type.TypeFactory._resolveTypePlaceholders(JavaType,JavaType)
com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder.useForType(JavaType)
com.fasterxml.jackson.databind.deser.std.MapDeserializer._readAndBindStringKeyMap(JsonParser,DeserializationContext,Map<Object,Object>)
com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver._idFrom(Object,Class<?>,TypeFactory)
com.fasterxml.jackson.databind.type.TypeBase.toCanonical()
com.fasterxml.jackson.databind.type.TypeFactory.constructType(Type)
com.fasterxml.jackson.databind.type.TypeFactory.constructSimpleType(Class<?>,Class<?>,JavaType[])
com.fasterxml.jackson.databind.type.TypeFactory.constructMapType(Class<? extends Map>,Class<?>,Class<?>)
com.fasterxml.jackson.databind.type.TypeFactory.constructCollectionType(Class<? extends Collection>,Class<?>)