com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter.getPreciserScopeKnowingConditionOutcome(Node,FlowScope,boolean)
com.google.javascript.jscomp.TypeCheck.visit(NodeTraversal,Node,Node)
com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter.maybeRestrictTwoNames(FlowScope,Node,JSType,JSType,Node,JSType,JSType)
com.google.javascript.rhino.jstype.FunctionType.checkFunctionEquivalenceHelper(FunctionType,EquivalenceMethod)
com.google.javascript.jscomp.Compiler.loadLibraryCode(String)
com.google.javascript.rhino.jstype.JSType.getTypesUnderShallowEquality(JSType)
com.google.javascript.rhino.jstype.JSType.getTypesUnderShallowInequality(JSType)
com.google.javascript.rhino.jstype.JSType.canTestForShallowEqualityWith(JSType)
com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter.caseEquality(Node,FlowScope,Function<TypePair,TypePair>)
com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter.caseEquality(Node,Node,FlowScope,Function<TypePair,TypePair>)
com.google.javascript.jscomp.jsonml.JsonMLAst.getAstRoot(AbstractCompiler)
com.google.javascript.jscomp.AbstractCommandLineRunner.CommandLineConfig.setJscompDevMode(CompilerOptions.DevMode)
com.google.javascript.jscomp.Compiler.setLoggingLevel(Level)
com.google.javascript.jscomp.parsing.IRFactory.validateTypeAnnotations(JSDocInfo,AstNode)
com.google.javascript.jscomp.parsing.IRFactory.transformTokenType(int)
com.google.javascript.jscomp.TypeCheck.getJSType(Node)
com.google.javascript.jscomp.TypeCheck.visitNew(NodeTraversal,Node)
com.google.javascript.jscomp.AbstractCommandLineRunner.doRun()
com.google.javascript.jscomp.CommandLineRunner.main(String[])
com.google.javascript.jscomp.TypeCheck.check(Node,boolean)