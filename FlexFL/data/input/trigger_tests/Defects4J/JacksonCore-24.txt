public void testToLongFailing() throws Exception
    {
        AsyncReaderWrapper p;

        // BigInteger -> error
        BigInteger big = BigInteger.valueOf(Long.MAX_VALUE).add(BigInteger.TEN);
        p = createParser(String.valueOf(big));
        assertToken(JsonToken.VALUE_NUMBER_INT, p.nextToken());
        assertEquals(NumberType.BIG_INTEGER, p.getNumberType());
        assertEquals(big, p.getBigIntegerValue());
        assertEquals(big, p.getNumberValue());
        try {
            p.getLongValue();
The last line shown above failed with the following stack trace.
com.fasterxml.jackson.core.JsonParseException: Numeric value (9223372036854775817) out of range of long (-9223372036854775808 - 9223372036854775807)
 at [Source: UNKNOWN; line: 1, column: 20]
	at com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:1833)
	at com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:704)
	at com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowLong(ParserMinimalBase.java:582)
	at com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowLong(ParserMinimalBase.java:577)
	at com.fasterxml.jackson.core.base.ParserBase.convertNumberToLong(ParserBase.java:921)
	at com.fasterxml.jackson.core.base.ParserBase.getLongValue(ParserBase.java:663)
	at com.fasterxml.jackson.core.testsupport.AsyncReaderWrapper.getLongValue(AsyncReaderWrapper.java:57)
	at com.fasterxml.jackson.core.json.async.AsyncNumberCoercionTest.testToLongFailing(AsyncNumberCoercionTest.java:189)