public void handlesEmptyStreamDuringParseRead() throws IOException {
        // this handles situations where the remote server sets a content length greater than it actually writes

        Connection.Response res = Jsoup.connect(InterruptedServlet.Url)
            .timeout(200)
            .execute();

        boolean threw = false;
        try {
            Document document = res.parse();
The last line shown above failed with the following stack trace.
org.jsoup.UncheckedIOException: java.io.IOException: Underlying input stream returned zero bytes
	at org.jsoup.parser.CharacterReader.bufferUp(CharacterReader.java:63)
	at org.jsoup.parser.CharacterReader.current(CharacterReader.java:93)
	at org.jsoup.parser.TokeniserState$1.read(TokeniserState.java:12)
	at org.jsoup.parser.Tokeniser.read(Tokeniser.java:45)
	at org.jsoup.parser.TreeBuilder.runParser(TreeBuilder.java:51)
	at org.jsoup.parser.TreeBuilder.parse(TreeBuilder.java:45)
	at org.jsoup.parser.Parser.parseInput(Parser.java:39)
	at org.jsoup.helper.DataUtil.parseInputStream(DataUtil.java:151)
	at org.jsoup.helper.HttpConnection$Response.parse(HttpConnection.java:837)
	at org.jsoup.integration.ConnectTest.handlesEmptyStreamDuringParseRead(ConnectTest.java:400)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:288)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at org.jsoup.parser.CharacterReader.bufferUp(CharacterReader.java:53)