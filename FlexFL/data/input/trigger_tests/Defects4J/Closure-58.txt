public void testExpressionInForIn() {
    assertLiveBeforeX("var a = [0]; X:for (a[1] in foo) { }", "a");
The last line shown above failed with the following stack trace.
java.lang.IllegalStateException
	at com.google.common.base.Preconditions.checkState(Preconditions.java:129)
	at com.google.javascript.jscomp.LiveVariablesAnalysis.addToSetIfLocal(LiveVariablesAnalysis.java:266)
	at com.google.javascript.jscomp.LiveVariablesAnalysis.computeGenKill(LiveVariablesAnalysis.java:206)
	at com.google.javascript.jscomp.LiveVariablesAnalysis.flowThrough(LiveVariablesAnalysis.java:159)
	at com.google.javascript.jscomp.LiveVariablesAnalysis.flowThrough(LiveVariablesAnalysis.java:47)
	at com.google.javascript.jscomp.DataFlowAnalysis.flow(DataFlowAnalysis.java:275)
	at com.google.javascript.jscomp.DataFlowAnalysis.analyze(DataFlowAnalysis.java:212)
	at com.google.javascript.jscomp.DataFlowAnalysis.analyze(DataFlowAnalysis.java:180)
	at com.google.javascript.jscomp.LiveVariableAnalysisTest.computeLiveness(LiveVariableAnalysisTest.java:366)
	at com.google.javascript.jscomp.LiveVariableAnalysisTest.getFlowStateAtX(LiveVariableAnalysisTest.java:312)
	at com.google.javascript.jscomp.LiveVariableAnalysisTest.assertLiveBeforeX(LiveVariableAnalysisTest.java:279)
	at com.google.javascript.jscomp.LiveVariableAnalysisTest.testExpressionInForIn(LiveVariableAnalysisTest.java:210)