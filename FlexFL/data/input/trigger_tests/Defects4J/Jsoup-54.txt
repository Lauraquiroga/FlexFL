public void handlesInvalidAttributeNames() {
        String html = "<html><head></head><body style=\"color: red\" \" name\"></body></html>";
        org.jsoup.nodes.Document jsoupDoc;
        jsoupDoc = Jsoup.parse(html);
        Element body = jsoupDoc.select("body").first();
        assertTrue(body.hasAttr("\"")); // actually an attribute with key '"'. Correct per HTML5 spec, but w3c xml dom doesn't dig it
        assertTrue(body.hasAttr("name\""));

        Document w3Doc = new W3CDom().fromJsoup(jsoupDoc);
The last line shown above failed with the following stack trace.
org.w3c.dom.DOMException: INVALID_CHARACTER_ERR: An invalid or illegal XML character is specified. 
	at com.sun.org.apache.xerces.internal.dom.CoreDocumentImpl.createAttribute(CoreDocumentImpl.java:611)
	at com.sun.org.apache.xerces.internal.dom.ElementImpl.setAttribute(ElementImpl.java:498)
	at org.jsoup.helper.W3CDom$W3CBuilder.copyAttributes(W3CDom.java:126)
	at org.jsoup.helper.W3CDom$W3CBuilder.head(W3CDom.java:92)
	at org.jsoup.select.NodeTraversor.traverse(NodeTraversor.java:31)
	at org.jsoup.helper.W3CDom.convert(W3CDom.java:66)
	at org.jsoup.helper.W3CDom.fromJsoup(W3CDom.java:46)
	at org.jsoup.helper.W3CDomTest.handlesInvalidAttributeNames(W3CDomTest.java:93)