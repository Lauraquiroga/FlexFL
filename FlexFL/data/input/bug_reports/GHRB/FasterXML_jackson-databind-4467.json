{
  "issue_id": 4464,
  "issue_url": "https://github.com/FasterXML/jackson-databind/issues/4464",
  "title": "When `Include.NON_DEFAULT` setting is used, `isEmpty()` method is not called on the serializer",
  "description_text": "### Search before asking\n\n- [X] I searched in the [issues](https://github.com/FasterXML/jackson-databind/issues) and found nothing similar.\n\n### Describe the bug\n\nDocumentation says that when Include.NON_DEFAULT is used, null, empty and default values of a property are skipped on serialization. It is not clear how the empty check is done because the isEmpty method of the serializer is called only when Include.NON_EMPTY is used explicitly.\r\n\r\nI have a case where I set Include.NON_DEFAULT globally on the ObjectMapper, and I have implemented a custom serializer to override the isEmpty method and thus let Jackson know when my object is empty. But my custom implementation of the isEmpty method is not called.\r\nThe only way to have it called by Jackson is to explicitly override the property inclusion configuration and use NON_EMPTY instead of the global NON_DEFAULT.\n\n### Version Information\n\n2.15.3\n\n### Reproduction\n\n<-- Any of the following\r\n1. Brief code sample/snippet: include here in preformatted/code section\r\n2. Longer example stored somewhere else (diff repo, snippet), add a link\r\n3. Textual explanation: include here\r\n -->\r\n```java\r\n// Your code here\r\n``` \r\n\n\n### Expected behavior\n\n_No response_\n\n### Additional context\n\n_No response_"
}