{
  "issue_id": 18082,
  "issue_url": "https://github.com/OpenAPITools/openapi-generator/issues/18082",
  "title": "[BUG] [Java/Spring] Openapi Generator 7.4.0 generates Integer Min and Max Values for int64 array instead of Long Values causing compile errors",
  "description_text": "#### Bug Report Checklist\r\n\r\n- [x] Have you provided a full/minimal spec to reproduce the issue?\r\n- [x] Have you validated the input using an OpenAPI validator ([example](https://apidevtools.org/swagger-parser/online/))?\r\n- [x] Have you [tested with the latest master](https://github.com/OpenAPITools/openapi-generator/wiki/FAQ#how-to-test-with-the-latest-master-of-openapi-generator) to confirm the issue still exists?\r\n- [x] Have you searched for related issues/PRs?\r\n- [x] What's the actual output vs expected output?\r\n- [ ] [Optional] Sponsorship to speed up the bug fix or feature request ([example](https://github.com/OpenAPITools/openapi-generator/issues/6178))\r\n\r\n<!--\r\nPlease follow the issue template below for bug reports.\r\nAlso please indicate in the issue title which language/library is concerned. Eg:  [BUG][JAVA] Bug generating foo with bar \r\n-->\r\n\r\n##### Description\r\n\r\nSince version 7.4.0 arrays of int64 items with defined min and max values are generated with @Min and @Max annotations.\r\nThe values are generated as Integer instead of Long. which results in \"integer number too large\" errors.\r\n\r\nGenerated code:\r\n```java\r\n  @Valid\r\n  private List<@Min(1000000000000) @Max(1999999999999)Long> ids;\r\n```\r\n\r\n##### openapi-generator version\r\n\r\nSince 7.4.0\r\n\r\n##### OpenAPI declaration file content or url\r\n\r\n```yaml\r\nopenapi: 3.0.3\r\ninfo:\r\n  title: test\r\n  description: Test API\r\n  version: 1.0.1\r\n\r\npaths:\r\n  /test:\r\n    get:\r\n      responses:\r\n        200:\r\n          description: Valid response\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/SomeLongIdArrayObject'\r\n\r\ncomponents:\r\n  schemas:\r\n    SomeLongIdArrayObject:\r\n      type: object\r\n      properties:\r\n        ids:\r\n          type: array\r\n          items:\r\n            type: integer\r\n            format: int64\r\n            minimum: 1000000000000\r\n            maximum: 1999999999999\r\n```\r\n\r\n##### Generation Details\r\n\r\npom - Plugin\r\n```xml\r\n<plugin>\r\n                <groupId>org.openapitools</groupId>\r\n                <artifactId>openapi-generator-maven-plugin</artifactId>\r\n                <version>7.4.0</version>\r\n                <executions>\r\n\r\n                    <execution>\r\n                        <id>test-v1</id>\r\n\r\n                        <phase>generate-sources</phase>\r\n                        <goals>\r\n                            <goal>generate</goal>\r\n                        </goals>\r\n                        <configuration>\r\n                            <inputSpec>${project.basedir}/src/main/resources/swagger/example.yaml\r\n                            </inputSpec>\r\n                            <generatorName>spring</generatorName>\r\n                            <generateApiTests>false</generateApiTests>\r\n                            <generateApiDocumentation>false</generateApiDocumentation>\r\n                            <generateModelTests>false</generateModelTests>\r\n                            <apiPackage>de.test.v1.controller</apiPackage>\r\n                            <modelPackage>de.test.v1.dto</modelPackage>\r\n                            <ignoreFileOverride>${project.basedir}/.openapi-generator-ignore</ignoreFileOverride>\r\n                            <skipIfSpecIsUnchanged>true</skipIfSpecIsUnchanged>\r\n                            <configOptions>\r\n                                <interfaceOnly>true</interfaceOnly>\r\n                                <hideGenerationTimestamp>true</hideGenerationTimestamp>\r\n                                <annotationLibrary>swagger2</annotationLibrary>\r\n                                <useSpringBoot3>true</useSpringBoot3>\r\n                                <skipDefaultInterface>true</skipDefaultInterface>\r\n                            </configOptions>\r\n                            <output>${project.basedir}/target/generated-sources</output>\r\n                        </configuration>\r\n                    </execution>\r\n                </executions>\r\n                <dependencies>\r\n                    <!-- https://mvnrepository.com/artifact/org.codehaus.plexus/plexus-utils -->\r\n                    <dependency>\r\n                        <groupId>org.codehaus.plexus</groupId>\r\n                        <artifactId>plexus-utils</artifactId>\r\n                        <version>${plexus.version}</version>\r\n                    </dependency>\r\n                </dependencies>\r\n            </plugin>\r\n            \r\n```\r\n\r\n##### Steps to reproduce\r\n\r\nGenerate via maven plugin results in\r\n\r\n```java\r\npackage de.test.v1.dto;\r\n\r\nimport java.net.URI;\r\nimport java.util.Objects;\r\nimport com.fasterxml.jackson.annotation.JsonProperty;\r\nimport com.fasterxml.jackson.annotation.JsonCreator;\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\nimport org.openapitools.jackson.nullable.JsonNullable;\r\nimport java.time.OffsetDateTime;\r\nimport jakarta.validation.Valid;\r\nimport jakarta.validation.constraints.*;\r\nimport io.swagger.v3.oas.annotations.media.Schema;\r\n\r\n\r\nimport java.util.*;\r\nimport jakarta.annotation.Generated;\r\n\r\n/**\r\n * SomeLongIdArrayObject\r\n */\r\n\r\n@Generated(value = \"org.openapitools.codegen.languages.SpringCodegen\", comments = \"Generator version: 7.4.0\")\r\npublic class SomeLongIdArrayObject {\r\n\r\n  @Valid\r\n  private List<@Min(1000000000000) @Max(1999999999999)Long> ids;\r\n\r\n  public SomeLongIdArrayObject ids(List<@Min(1000000000000) @Max(1999999999999)Long> ids) {\r\n    this.ids = ids;\r\n    return this;\r\n  }\r\n\r\n  public SomeLongIdArrayObject addIdsItem(Long idsItem) {\r\n    if (this.ids == null) {\r\n      this.ids = new ArrayList<>();\r\n    }\r\n    this.ids.add(idsItem);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Get ids\r\n   * @return ids\r\n  */\r\n  \r\n  @Schema(name = \"ids\", requiredMode = Schema.RequiredMode.NOT_REQUIRED)\r\n  @JsonProperty(\"ids\")\r\n  public List<@Min(1000000000000) @Max(1999999999999)Long> getIds() {\r\n    return ids;\r\n  }\r\n\r\n  public void setIds(List<@Min(1000000000000) @Max(1999999999999)Long> ids) {\r\n    this.ids = ids;\r\n  }\r\n\r\n  @Override\r\n  public boolean equals(Object o) {\r\n    if (this == o) {\r\n      return true;\r\n    }\r\n    if (o == null || getClass() != o.getClass()) {\r\n      return false;\r\n    }\r\n    SomeLongIdArrayObject someLongIdArrayObject = (SomeLongIdArrayObject) o;\r\n    return Objects.equals(this.ids, someLongIdArrayObject.ids);\r\n  }\r\n\r\n  @Override\r\n  public int hashCode() {\r\n    return Objects.hash(ids);\r\n  }\r\n\r\n  @Override\r\n  public String toString() {\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"class SomeLongIdArrayObject {\\n\");\r\n    sb.append(\"    ids: \").append(toIndentedString(ids)).append(\"\\n\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n  }\r\n\r\n  /**\r\n   * Convert the given object to string with each line indented by 4 spaces\r\n   * (except the first line).\r\n   */\r\n  private String toIndentedString(Object o) {\r\n    if (o == null) {\r\n      return \"null\";\r\n    }\r\n    return o.toString().replace(\"\\n\", \"\\n    \");\r\n  }\r\n}\r\n\r\n\r\n```\r\n\r\n##### Suggest a fix\r\n\r\nGenerate Min and Max Value as Long values instead, as for normal int64 fields.\r\n\r\nExpected Output:\r\n```java\r\npackage de.test.v1.dto;\r\n\r\nimport java.net.URI;\r\nimport java.util.Objects;\r\nimport com.fasterxml.jackson.annotation.JsonProperty;\r\nimport com.fasterxml.jackson.annotation.JsonCreator;\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\nimport org.openapitools.jackson.nullable.JsonNullable;\r\nimport java.time.OffsetDateTime;\r\nimport jakarta.validation.Valid;\r\nimport jakarta.validation.constraints.*;\r\nimport io.swagger.v3.oas.annotations.media.Schema;\r\n\r\n\r\nimport java.util.*;\r\nimport jakarta.annotation.Generated;\r\n\r\n/**\r\n * SomeLongIdArrayObject\r\n */\r\n\r\n@Generated(value = \"org.openapitools.codegen.languages.SpringCodegen\", comments = \"Generator version: 7.4.0\")\r\npublic class SomeLongIdArrayObject {\r\n\r\n  @Valid\r\n  private List<@Min(1000000000000L) @Max(1999999999999L)Long> ids;\r\n\r\n  public SomeLongIdArrayObject ids(List<@Min(1000000000000L) @Max(1999999999999L)Long> ids) {\r\n    this.ids = ids;\r\n    return this;\r\n  }\r\n\r\n  public SomeLongIdArrayObject addIdsItem(Long idsItem) {\r\n    if (this.ids == null) {\r\n      this.ids = new ArrayList<>();\r\n    }\r\n    this.ids.add(idsItem);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Get ids\r\n   * @return ids\r\n  */\r\n  \r\n  @Schema(name = \"ids\", requiredMode = Schema.RequiredMode.NOT_REQUIRED)\r\n  @JsonProperty(\"ids\")\r\n  public List<@Min(1000000000000L) @Max(1999999999999L)Long> getIds() {\r\n    return ids;\r\n  }\r\n\r\n  public void setIds(List<@Min(1000000000000L) @Max(1999999999999L)Long> ids) {\r\n    this.ids = ids;\r\n  }\r\n\r\n  @Override\r\n  public boolean equals(Object o) {\r\n    if (this == o) {\r\n      return true;\r\n    }\r\n    if (o == null || getClass() != o.getClass()) {\r\n      return false;\r\n    }\r\n    SomeLongIdArrayObject someLongIdArrayObject = (SomeLongIdArrayObject) o;\r\n    return Objects.equals(this.ids, someLongIdArrayObject.ids);\r\n  }\r\n\r\n  @Override\r\n  public int hashCode() {\r\n    return Objects.hash(ids);\r\n  }\r\n\r\n  @Override\r\n  public String toString() {\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"class SomeLongIdArrayObject {\\n\");\r\n    sb.append(\"    ids: \").append(toIndentedString(ids)).append(\"\\n\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n  }\r\n\r\n  /**\r\n   * Convert the given object to string with each line indented by 4 spaces\r\n   * (except the first line).\r\n   */\r\n  private String toIndentedString(Object o) {\r\n    if (o == null) {\r\n      return \"null\";\r\n    }\r\n    return o.toString().replace(\"\\n\", \"\\n    \");\r\n  }\r\n}\r\n\r\n\r\n```\r\n"
}