{
  "issue_id": 7958,
  "issue_url": "https://github.com/apache/rocketmq/issues/7958",
  "title": "[Bug] proxy findOneBroker will always use first",
  "description_text": "### Before Creating the Bug Report\r\n\r\n- [X] I found a bug, not just asking a question, which should be created in [GitHub Discussions](https://github.com/apache/rocketmq/discussions).\r\n\r\n- [X] I have searched the [GitHub Issues](https://github.com/apache/rocketmq/issues) and [GitHub Discussions](https://github.com/apache/rocketmq/discussions)  of this repository and believe that this is not a duplicate.\r\n\r\n- [X] I have confirmed that this bug belongs to the current repository, not other repositories of RocketMQ.\r\n\r\n\r\n### Runtime platform environment\r\n\r\n```\r\nprotected Optional<BrokerData> findOneBroker(String topic) throws Exception {\r\n        try {\r\n            return topicRouteService.getAllMessageQueueView(ProxyContext.createForInner(this.getClass()), topic).getTopicRouteData().getBrokerDatas().stream().findAny();\r\n        } catch (Exception e) {\r\n            if (TopicRouteHelper.isTopicNotExistError(e)) {\r\n                return Optional.empty();\r\n            }\r\n            throw e;\r\n        }\r\n    }\r\n```\r\n\r\n### RocketMQ version\r\n\r\ndevelop\r\n\r\n### JDK Version\r\n\r\n_No response_\r\n\r\n### Describe the Bug\r\n\r\nstream then findany will always first\uff0cThe broker's load will show relatively noticeable imbalance.\r\n\r\n### Steps to Reproduce\r\n\r\n```\r\n    @Test\r\n    public void testParseRequestContent() {\r\n        List<BrokerData> brokerDataList = new ArrayList<>();\r\n        BrokerData brokerData = new BrokerData();\r\n        brokerData.setBrokerName(\"brokerName\");\r\n\r\n        BrokerData brokerData2 = new BrokerData();\r\n        brokerData2.setBrokerName(\"brokerName2\");\r\n\r\n        brokerDataList.add(brokerData);\r\n        brokerDataList.add(brokerData2);\r\n\r\n        for (int i=0;i<1000;i++){\r\n            //Collections.shuffle(brokerDataList);\r\n            String rs = brokerDataList.stream().findAny().get().getBrokerName();\r\n            System.out.println(rs);\r\n        }\r\n    }\r\n```\r\n\r\n### What Did You Expect to See?\r\n\r\nbroker1 and broker2\r\n\r\n### What Did You See Instead?\r\n\r\nalways broekrname\r\n\r\n### Additional Context\r\n\r\n_No response_"
}