{
    "title": "StringUtils methods do not handle Unicode 2.0+ supplementary characters correctly.",
    "description": "\n\nStringUtils.containsAny methods incorrectly matches Unicode 2.0+ supplementary characters.\nFor example, define a test fixture to be the Unicode character U+20000 where U+20000 is written in Java source as \"\\uD840\\uDC00\"\n\tprivate static final String CharU20000 = \"\\uD840\\uDC00\";\n\tprivate static final String CharU20001 = \"\\uD840\\uDC01\";\nYou can see Unicode supplementary characters correctly implemented in the JRE call:\n\tassertEquals(-1, CharU20000.indexOf(CharU20001));\nBut this is broken:\n\tassertEquals(false, StringUtils.containsAny(CharU20000, CharU20001));\n\tassertEquals(false, StringUtils.containsAny(CharU20001, CharU20000));\nThis is fine:\n\tassertEquals(true, StringUtils.contains(CharU20000 + CharU20001, CharU20000));\n\tassertEquals(true, StringUtils.contains(CharU20000 + CharU20001, CharU20001));\n\tassertEquals(true, StringUtils.contains(CharU20000, CharU20000));\n\tassertEquals(false, StringUtils.contains(CharU20000, CharU20001));\nbecause the method calls the JRE to perform the match.\nMore than you want to know:\n\nhttp://java.sun.com/developer/technicalArticles/Intl/Supplementary/\n\n\n"
}