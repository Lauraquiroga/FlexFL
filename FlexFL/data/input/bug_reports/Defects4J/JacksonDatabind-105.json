{
    "title": "Illegal reflective access operation warning when using <code>java.lang.Void</code> as value type",
    "description": "\nI'm using Jackson (2.9.7) through Spring's RestTemplate:\nResponseEntity<Void> response = getRestTemplate().exchange(\n\t\trequestUrl,\n\t\tHttpMethod.PATCH,\n\t\tnew HttpEntity<>(dto, authHeaders),\n\t\tVoid.class\n);\nWhen Void is used to indicate that the ResponseEntity has no body, the following warning appears in the console:\nWARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by com.fasterxml.jackson.databind.util.ClassUtil (file:/<snip>repository/com/fasterxml/jackson/core/jackson-databind/2.9.7/jackson-databind-2.9.7.jar) to constructor java.lang.Void()\nWARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.databind.util.ClassUtil\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\n\nThe problem disappears if String is used as generic type.\n"
}