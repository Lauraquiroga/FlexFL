{
    "title": "Possibly wrong <code>TokenBuffer</code> delegate deserialization using <code>@JsonCreator</code>",
    "description": "\nclass Value {\n@JsonCreator\npublic static Value from(TokenBuffer buffer) {\n...\n}\nGiven JSON string is  { \"a\":1, \"b\":null }, it is expected that while deserializing using delegate buffer,\ncurrent token will be start object {, and rest of the tokens will be available in buffer:\n[START_OBJECT, FIELD_NAME, VALUE_NUMBER_INT, FIELD_NAME, VALUE_NULL, END_OBJECT]\n\nBut, buffers ends up being started with field name and then contains single attribute value\n[FIELD_NAME, VALUE_NUMBER_INT]\n\nIt's due to how TokenBuffer#copyCurrentStructure works when we have current token as a FIELD_NAME, rather than START_OBJECT, because it's forced to move to next token BeanDeserializer.java:120\nHope this helps to nail it down. Is it an intended behavior, or it's regression/bug?\n"
}