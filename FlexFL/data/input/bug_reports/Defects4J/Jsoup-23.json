{
    "title": "Entity whose name is made up of letters and digits is not retained",
    "description": "\nAt about line 136 Tokenizer.java, reader.consumeLetterSequence() is called. This is fine until it an entity such as \u00b9 is encountered - just the letter part of the entity name will be read causing the Entities.isNamedEntity(nameRef) call at about line 140 to fail.\nI have fixed this quickly locally by replacing reader.consumerLetterSequence() with a call to a new consumeLetterDigitSequence() in the CharacterReader.java - there may be a better way of doing this:\nString consumeLetterDigitSequence() {\n    String letters = consumeLetterSequence();\n    String digits = consumeDigitSequence();\n    return letters + digits;\n}\n\nThe following is a sample  unit test:\n@Test public void letterDigitEntities() {\n    String html = \"<p>\u00b9\u00b2\u00b3\u00bc\u00bd\u00be</p>\";\n    Whitelist whitelist = Whitelist.none();\n    whitelist\n        .addTags(\"p\");\n    String html = Jsoup.clean(html, whitelist);\n    assertEquals(\"<p>\u00b9\u00b2\u00b3\u00bc\u00bd\u00be</p>\", html);\n}\n\n"
}