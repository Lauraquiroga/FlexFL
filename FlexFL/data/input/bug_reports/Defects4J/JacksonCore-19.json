{
    "title": "ArrayIndexOutOfBoundsException: 200 on floating point number with exactly 200-length decimal part",
    "description": "\nVery similar issue to #160 and #157\nWith jackson-core 2.8.1 when attempting to parse fractional number that has exactly 200 numbers in the decimal part and some random fractional part then java.lang.ArrayIndexOutOfBoundsException: 200 is thrown.\npublic class Test {\n    public static void main(String[] args) throws IOException {\n        StringBuilder input = new StringBuilder();\n        for (int i = 1; i < 201; i++) {\n            input.append(1);\n        }\n        input.append(\".0\");\n\n        JsonFactory factory = new JsonFactory();\n\n        JsonParser parser =\n                factory.createParser(new ByteArrayInputStream(input.toString().getBytes(Charset.forName(\"UTF-8\"))));\n        parser.nextToken();\n    }\n}\n\nProduces:\nException in thread \"main\" java.lang.ArrayIndexOutOfBoundsException: 200 at com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseFloat(UTF8StreamJsonParser.java:1576) at com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseNumber2(UTF8StreamJsonParser.java:1509) at com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parsePosNumber(UTF8StreamJsonParser.java:1410) at com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:876) at com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:772)\n"
}