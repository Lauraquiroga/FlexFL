{
    "title": "WrongTypeOfReturnValue when abstract class have two abstract method",
    "description": "\nHey\nI found a strange problem, when i create a abstract class:\nabstract class AbstractClass {\n    abstract protected Long lol();\n    abstract protected String wow();\n    public String give() {\n        wow();\n        lol();\n        return \"give\";\n    }\n}\nand i have another class extends abstract Class:\npublic class ClassExtendsAbstractClass extends AbstractClass {\n@Override\n protected Long lol() {\n        return 2L;\n    }\n    @Override\n    protected String wow() {\n        return \"WOW\";\n    }\n}\nand I have class:\npublic class A {\n  private ClassExtendsAbstractClass classExtendsAbstractClass;\n  public A(ClassExtendsAbstractClass classExtendsAbstractClass) {\n    this.classExtendsAbstractClass = classExtendsAbstractClass;\n  }\n  public String doSomeThing(){\n    return classExtendsAbstractClass.wow();\n  }\n}\nand when i try mock method doSomeThing() from A class in test:\n  @Mock\n  private ClassExtendsAbstractClass classExtendsAbstractClass;\n  private A a;\n\n  @Before\n  public void before(){\n    Mockito.when(classExtendsAbstractClass.give()).thenReturn(\"aaa\");\n  }\n  @Test\n  public void test() {\n    a = new A(classExtendsAbstractClass);\n  }\nI get the error:\n\norg.mockito.exceptions.misusing.WrongTypeOfReturnValue:\nString cannot be returned by lol()\nlol() should return Long\n\nThis is strange behavior, because the method lol() should not be called, but when I delete one abstract method everything is good.\n"
}