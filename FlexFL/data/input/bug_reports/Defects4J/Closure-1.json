{
    "title": "function arguments should not be optimized away",
    "description": "Function arguments should not be optimized away, as this comprimizes the function's length property.\r\n\r\nWhat steps will reproduce the problem?\n\r\n// ==ClosureCompiler==\r\n// @compilation_level SIMPLE_OPTIMIZATIONS\r\n// @output_file_name default.js\r\n// ==/ClosureCompiler==\r\nfunction foo (bar, baz) {\r\n  return bar;\r\n}\r\nalert (foo.length);\r\nfunction foo (bar, baz) {\r\n  return bar;\r\n}\r\nalert (foo.length);\r\n\r\n--------------------------------------\r\n\r\nWhat is the expected output?\r\n\r\nfunction foo(a,b){return a}alert(foo.length);\r\n\r\n--------------------------------------\r\n\r\nWhat do you see instead?\r\n\r\nfunction foo(a){return a}alert(foo.length);\r\n\r\n--------------------------------------\r\n\r\nWhat version of the product are you using? On what operating system?\n\r\nI'm using the product from the web page http://closure-compiler.appspot.com/home\r\n\r\nI'm using Firefox 3.6.10 on Ubuntu 10.0.4\r\n\r\nPlease provide any additional information below.\n\r\nThe function's length property is essential to many techniques, such as currying functions."
}