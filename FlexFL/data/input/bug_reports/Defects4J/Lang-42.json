{
    "title": "StringEscapeUtils.escapeHtml incorrectly converts unicode characters above U+00FFFF into 2 characters",
    "description": "\n\nCharacters that are represented as a 2 characters internaly by java are incorrectly converted by the function. The following test displays the problem quite nicely:\nimport org.apache.commons.lang.*;\npublic class J2 {\n    public static void main(String[] args) throws Exception {\n        // this is the utf8 representation of the character:\n        // COUNTING ROD UNIT DIGIT THREE\n        // in unicode\n        // codepoint: U+1D362\n        byte[] data = new byte[] \n{ (byte)0xF0, (byte)0x9D, (byte)0x8D, (byte)0xA2 }\n;\n        //output is: \ufffd\ufffd\n        // should be: \ud834\udf62\n        System.out.println(\"'\" + StringEscapeUtils.escapeHtml(new String(data, \"UTF8\")) + \"'\");\n    }\n}\nShould be very quick to fix, feel free to drop me an email if you want a patch.\n\n"
}