{
    "title": "Jsoup.clean sometimes will throw execution exception:java.lang.StackOverflowError",
    "description": "\n[ ERROR ]  throw execution exception:java.lang.StackOverflowError\njava.util.concurrent.ExecutionException: java.lang.StackOverflowError\nCaused by: java.lang.StackOverflowError\nat org.jsoup.safety.Whitelist.isSafeTag(Whitelist.java:323)\nat org.jsoup.safety.Cleaner.copySafeNodes(Cleaner.java:115)\nat org.jsoup.safety.Cleaner.copySafeNodes(Cleaner.java:127)\nat org.jsoup.safety.Cleaner.copySafeNodes(Cleaner.java:127)\nat org.jsoup.safety.Cleaner.copySafeNodes(Cleaner.java:127)\nat org.jsoup.safety.Cleaner.copySafeNodes(Cleaner.java:127)\nclean the url:http://blog.sina.com.cn/s/blog_501a5b1f0102dx6z.html\nIt's have to much wbr tags,when i search the page source ,found 24205.\ni look at  org.jsoup.safety.Cleaner source code and add code like this\nprivate int num = 1;\n    /**\n     * Iterates the input and copies trusted nodes (tags, attributes, text) into\n     * the destination.\n     * \n     * @param source\n     *            source of HTML\n     * @param dest\n     *            destination element to copy into\n     * @return number of discarded elements (that were considered unsafe)\n     */\n    private int copySafeNodes(Element source, Element dest) {\n        List<Node> sourceChildren = source.childNodes();\n        int numDiscarded = 0;\n\n        for (Node sourceChild : sourceChildren) {\n            num++;\n            logger.info(num);\n            if (num > 2000) {\n                //break this tag.\n                break;\n            }\n            if (sourceChild instanceof Element) {\n                Element sourceEl = (Element) sourceChild;\n\n                if (whitelist.isSafeTag(sourceEl.tagName())) { // safe, clone\n                                                                // and copy safe\n                                                                // attrs\n                    ElementMeta meta = createSafeElement(sourceEl);\n                    Element destChild = meta.el;\n                    dest.appendChild(destChild);\n                    numDiscarded += meta.numAttribsDiscarded;\n                    numDiscarded += copySafeNodes(sourceEl, destChild); // recurs\n                } else { // not a safe tag, but it may have children (els or\n                            // text) that are, so recurse\n                    numDiscarded++;\n                    numDiscarded += copySafeNodes(sourceEl, dest);\n                }\n            } else if (sourceChild instanceof TextNode) {\n                TextNode sourceText = (TextNode) sourceChild;\n                TextNode destText = new TextNode(sourceText.getWholeText(),\n                        sourceChild.baseUri());\n                dest.appendChild(destText);\n            } // else, we don't care about comments, xml proc instructions, etc\n        }\n        return numDiscarded;\n    }\nbut the clean result will be wrong and The layout will be chaos.\nHow can I solve this problem?\n"
}