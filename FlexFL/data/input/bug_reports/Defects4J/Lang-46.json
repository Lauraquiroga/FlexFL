{
    "title": "StringEscapeUtils.escapeJava(String) escapes '/' characters",
    "description": "\n\nCommons Lang 2.4 StringEscapeUtils.escapeJava(String) now escapes '/' characters, which is not a valid \"escapable\" character in Java strings.  I haven't tried the other Java escape/unescape methods to see if they have a similar problem, or that only Java \"escapable\" characters are escaped by escapeJava(String).\nThis bug may have appeared as an unintended side-effect of the fix for LANG-363.\nAlso the javadoc for escapeJava is now a little off, in that '/' should now be included in the sentence describing the differences between Java and Javascript strings, with respect to escaping rules.\nThe following is a JUnit3 test demonstrating the bug.\nimport junit.framework.TestCase;\nimport org.apache.commons.lang.StringEscapeUtils;\npublic class StringEscapeUtilsTest extends TestCase {\n    public void testEscapeJavaWithSlash() \n{\n        final String input = \"String with a slash (/) in it\";\n        \n        final String expected = input;\n        final String actual   = StringEscapeUtils.escapeJava( input );\n\n        /**\n         * In 2.4 StringEscapeUtils.escapeJava(String) escapes '/' characters,\n         * which are not a valid character to escape in a Java string.  \n         */\n        assertEquals( expected, actual );\n    }\n}\n\n"
}