{
    "title": "true/false are not always replaced for !0/!1",
    "description": "What steps will reproduce the problem?\n\r\nfunction some_function() {\r\n  var fn1;\r\n  var fn2;\r\n\r\n  if (any_expression) {\r\n    fn2 = external_ref;\r\n    fn1 = function (content) {\r\n      return fn2();\r\n    }\r\n  }\r\n\r\n  return {\r\n    method1: function () {\r\n      if (fn1) fn1();\r\n      return true;\r\n    },\r\n    method2: function () {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\nWhat is the expected output? What do you see instead?\n\r\nWe expect that true/false will be replaced for !0/!1, but it doesn't happend.\r\n\r\nfunction some_function() {\r\n  var a, b;\r\n  any_expression && (b = external_ref, a = function () {\r\n    return b()\r\n  });\r\n  return {\r\n    method1: function () {\r\n      a && a();\r\n      return true\r\n    },\r\n    method2: function () {\r\n      return false\r\n    }\r\n  }\r\n};\r\n\r\nWhat version of the product are you using? On what operating system?\n\r\nThis is output for latest official build.\r\nI also got the same output for 20120430, 20120305. But 20111117 is OK.\r\n\r\nPlease provide any additional information below.\n\r\nHere is just one of example. I found too many non-replaced true/false in compiler output. Replacement non-replaced true/false to !1/!0 in conpiler output saves 1-2 kb for 850 kb js file."
}