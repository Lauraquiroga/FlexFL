{
    "title": "Combining temporary strings are over-optimized in advanced build",
    "description": "What steps will reproduce the problem?\n1. This bug only manifests itself in large code bases. How large, and what the specifics are, I haven't yet worked out, since the output differs. But the principle code is:\r\n\r\nsgxColorRGBA.prototype.asHex = function() {\r\n\tvar hexString = \"\";\r\n\t\r\n\tstr = (sgxFloor(this.r*255)).toString(16);\r\n\tif (str.length < 2) { str = \"0\"+str; }\r\n\thexString += str;\r\n\r\n\tstr = (sgxFloor(this.g*255)).toString(16);\r\n\tif (str.length < 2) { str = \"0\"+str; }\r\n\thexString += str;\r\n\r\n\tstr = (sgxFloor(this.b*255)).toString(16);\r\n\tif (str.length < 2) { str = \"0\"+str; }\r\n\thexString += str;\r\n\r\n\tstr = (sgxFloor(this.a*255)).toString(16);\r\n\tif (str.length < 2) { str = \"0\"+str; }\r\n\thexString += str;\r\n\r\n\treturn hexString;\r\n}\r\n\r\nNote that 'str' is not declared as var.\r\n\r\nWhat is the expected output? What do you see instead?\nI see this:\r\nsgxColorRGBA.prototype.pb = function() {\r\n  str = A(255 * this.A).toString(16);\r\n  2 > str.length && (str = \"0\" + str);\r\n  str = A(255 * this.w).toString(16);\r\n  2 > str.length && (str = \"0\" + str);\r\n  str = A(255 * this.s).toString(16);\r\n  2 > str.length && (str = \"0\" + str);\r\n  str = A(255 * this.r).toString(16);\r\n  2 > str.length && (str = \"0\" + str);\r\n  return\"\" + str + str + str + str\r\n};\r\n\r\nObviously, repeatedly adding 'str' is broken in the final line, compared to the original. So whatever is aggregating the result is seeing a temporary 'str' reference and combining it, I guess. If 'str' is declared as var, the problem goes away.\r\n\r\nI'd expect a warning, at least.\r\n\r\nWhat version of the product are you using? On what operating system?\n\r\nLive at http://closure-compiler.appspot.com\r\n\r\nPlease provide any additional information below.\n\r\nAs a stand-alone method, both 'var str' and 'str' works. It's only when the project hits a certain (undetermined) size that it fails.\r\n\r\n"
}