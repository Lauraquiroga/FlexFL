{
    "title": "Cannot set custom format for <code>SqlDateSerializer</code> globally",
    "description": "\nVersion: 2.9.5\nAfter #219 was fixed, the default format for java.sql.Date serialization switched from string to numeric, following the default value of WRITE_DATES_AS_TIMESTAMPS.\nIn order to prevent breaks, I want java.sql.Date to serialize as a string, without changing behavior for java.util.Date (which has always serialized as a number by default).\nAccording to #219 (comment), I should be able to revert the behavior for java.sql.Date only with\nfinal ObjectMapper mapper = new ObjectMapper();\nmapper.configOverride(java.sql.Date.class).setFormat(JsonFormat.Value.forPattern(\"yyyy-MM-dd\"));\n\nThis doesn't seem to do anything, though. Looking at the code, it looks like it's because the custom format isn't actually added to SqlDateSerializer except in the createContextual method (https://github.com/FasterXML/jackson-databind/blob/master/src/main/java/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java#L59).\nFor now, I've reverted this behavior with\nmapper.registerModule(new SimpleModule() {\n            {\n                addSerializer(\n                        java.sql.Date.class,\n                        new SqlDateSerializer().withFormat(false, new SimpleDateFormat(\"yyyy-MM-dd\"))\n                );\n            }\n        });\n\nbut it seems pretty hacky so I'd prefer the other method if possible.\n"
}