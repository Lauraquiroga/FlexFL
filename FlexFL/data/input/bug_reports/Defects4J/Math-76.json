{
    "title": "NaN singular value from SVD",
    "description": "\n\nThe following jython code\nStart code\nfrom org.apache.commons.math.linear import *\nAlist = [[1.0, 2.0, 3.0],[2.0,3.0,4.0],[3.0,5.0,7.0]]\nA = Array2DRowRealMatrix(Alist)\ndecomp = SingularValueDecompositionImpl(A)\nprint decomp.getSingularValues()\nEnd code\nprints\narray('d', [11.218599757513008, 0.3781791648535976, nan])\nThe last singular value should be something very close to 0 since the matrix\nis rank deficient.  When i use the result from getSolver() to solve a system, i end \nup with a bunch of NaNs in the solution.  I assumed i would get back a least squares solution.\nDoes this SVD implementation require that the matrix be full rank?  If so, then i would expect\nan exception to be thrown from the constructor or one of the methods.\n\n"
}