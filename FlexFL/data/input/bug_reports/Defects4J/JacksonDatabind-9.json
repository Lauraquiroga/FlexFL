{
    "title": "Deserializing Map&lt;Class&lt;? extends Object&gt;, String&gt;",
    "description": "\nI am having problems deserializing my Map<Class<? extends Object>, String>. Simple test case demonstrates it:\n@Test\npublic void testMapWithClassAsKey() throws Exception {\n    Map<Class<? extends Object>, String> map = new HashMap<>();\n    map.put(ArrayList.class, \"ArrayList\");\n    map.put(HashMap.class, \"HashMap\");\n\n    ObjectMapper mapper = new ObjectMapper();\n\n    String json = mapper.writerWithDefaultPrettyPrinter().writeValueAsString(map);\n    System.out.println(json);\n    mapper.readValue(json, new TypeReference<Map<Class<? extends Object>, String>>(){});\n}\nThis test serializes the map as:\n{\n    \"class java.util.ArrayList\" : \"ArrayList\",\n    \"class java.util.HashMap\" : \"HashMap\"\n}\nmapper.readValue(json, new TypeReference<Map<Class<? extends Object>, String>>(){}); then throws a Exception:\ncom.fasterxml.jackson.databind.exc.InvalidFormatException: Can not construct     Map key of type java.lang.Class from String \"class java.util.ArrayList\": not a valid representation: Can not construct Map key of type java.lang.Class from String \"class java.util.ArrayList\": unable to parse key as Class\n at [Source: ...\n\nAs i understood from #630 the KeyDeserializer for Class should be part of Jackson. Am I missing something?\n"
}