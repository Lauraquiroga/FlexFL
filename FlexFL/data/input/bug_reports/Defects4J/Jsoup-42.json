{
    "title": "FormElement's formData ignores input checkbox checked without value.",
    "description": "\nWhen there is input:\n<input type=\"checkbox\" name=\"testCheckBox\" checked=\"checked\" />\n\nThe \"formData()\" of FormElement's ignores that default value which should be \"on\" as submitted by browsers.\nHTML fragment:\n<html>\n    <head>\n        <title>Test</title>\n    </head>\n\n    <body>\n\n    <form name=\"myForm\" method=\"POST\">\n        <input type=\"checkbox\" name=\"testCheckBox\" checked=\"checked\" /> Something<br/>\n\n        <input type=\"submit\" value=\"Submit\" />\n    </form>\n\n    </body>\n</html>\n\nWhen submiting from Firefox it sends to sever: testCheckBox=on\nJava code:\n    public static void main(String[] args)\n    {\n        final String html = \"<html>\\n\"\n                            + \"    <head>\\n\"\n                            + \"        <title>Test</title>\\n\"\n                            + \"    </head>\\n\"\n                            + \"    \\n\"\n                            + \"    <body>\\n\"\n                            + \"\\n\"\n                            + \"    <form name=\\\"myForm\\\" method=\\\"POST\\\">\\n\"\n                            + \"        <input type=\\\"checkbox\\\" name=\\\"testCheckBox\\\" checked=\\\"checked\\\" /> Something<br/>\\n\"\n                            + \"\\n\"\n                            + \"        <input type=\\\"submit\\\" value=\\\"Submit\\\" />\\n\"\n                            + \"    </form>\\n\"\n                            + \"\\n\"\n                            + \"    </body>\\n\"\n                            + \"</html>\";\n\n        final Document document = Jsoup.parse(html);\n\n        final FormElement formElement = (FormElement) document.select(\"form[name=myForm]\").first();\n\n        for (Connection.KeyVal keyVal : formElement.formData())\n        {\n            System.out.println(keyVal.key() + \"=\" + keyVal.value());\n        }\n\n    }\n\nOutput: testCheckBox=\nExpected output: testCheckBox=on\nSeems like Jsoup doesn't add default value which is sent by browsers. The \"submit()\" method from FormElement also uses \"formData()\" method to get form's submission parameters. By sending the empty String for checkbox the server acts as it's not checked when in fact it was checked.\nAlso while testing noticed that it doesn't check the checkbox'es at all. If there is checkbox with value, but not checked, it will get the value no matter what, for example:\n        <input type=\"checkbox\" name=\"textCheckBox2\" value=\"testVal\" /> \n\nThis affects radio buttons as well. Not selected radion buttons should not be sent to server, but formData() add their values anyway.\nI'm not sure if that's done on purpose, but submit() method will get wrong parameters for submission since not checked input value is not sent to server at all.\nMoreover type button value and \"disabled\" inputs are not sent to server as well (by browsers).\nLooked at the source, one extra else if before the final else in \"formData()\" method could solve this:\nelse if (\"input\".equals(el.tagName())) {\n                // Not disabled? Ignore disabled inputs.\n                if(!el.hasAttr(\"disabled\")) {\n\n                    // Deal with checkbox and radio (not checked should not be added to avoid sending to server)\n                    if(\"checkbox\".equals(el.attr(\"type\")) || \"radio\".equals(el.attr(\"type\"))) {\n\n                        // Checked, but no value? Default should be \"on\".\n                        if(el.hasAttr(\"checked\") && !el.hasAttr(\"value\")) {\n                            data.add(HttpConnection.KeyVal.create(name, \"on\"));\n                        } \n                        // Checked? Add it's value\n                        else if(el.hasAttr(\"checked\")) {\n                            data.add(HttpConnection.KeyVal.create(name, el.val()));\n                        }\n                    } \n                    // Buttons should be ignored.\n                    else if(!\"button\".equals(el.attr(\"type\"))){\n                        data.add(HttpConnection.KeyVal.create(name, el.val()));\n                    }\n                }\n            }\n\nOne more thing. If form has multiple type submit inputs, only the clicked input's value should be sent to server, but I have no idea how this could be implemented. Sending all submit input's values can change the server's logic and be bad (result not as expected).\n"
}