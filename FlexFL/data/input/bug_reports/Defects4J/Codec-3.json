{
    "title": "Double Metaphone bugs in alternative encoding",
    "description": "\n\nThe new test case (CODEC-83) has highlighted a number of issues with the \"alternative\" encoding in the Double Metaphone implementation\n1) Bug in the handleG method when \"G\" is followed by \"IER\" \n\nThe alternative encoding of \"Angier\" results in \"ANKR\" rather than \"ANJR\"\nThe alternative encoding of \"rogier\" results in \"RKR\" rather than \"RJR\"\n\nThe problem is in the handleG() method and is caused by the wrong length (4 instead of 3) being used in the contains() method:\n\n } else if (contains(value, index + 1, 4, \"IER\")) {\n\n\n...this should be\n\n } else if (contains(value, index + 1, 3, \"IER\")) {\n\n\n2)  Bug in the handleL method\n\nThe alternative encoding of \"cabrillo\" results in \"KPRL \" rather than \"KPR\"\n\nThe problem is that the first thing this method does is append an \"L\" to both primary & alternative encoding. When the conditionL0() method returns true then the \"L\" should not be appended for the alternative encoding\n\nresult.append('L');\nif (charAt(value, index + 1) == 'L') {\n    if (conditionL0(value, index)) {\n        result.appendAlternate(' ');\n    }\n    index += 2;\n} else {\n    index++;\n}\nreturn index;\n\n\nSuggest refeactoring this to\n\nif (charAt(value, index + 1) == 'L') {\n    if (conditionL0(value, index)) {\n        result.appendPrimary('L');\n    } else {\n        result.append('L');\n    }\n    index += 2;\n} else {\n    result.append('L');\n    index++;\n}\nreturn index;\n\n\n3) Bug in the conditionL0() method for words ending in \"AS\" and \"OS\"\n\nThe alternative encoding of \"gallegos\" results in \"KLKS\" rather than \"KKS\"\n\nThe problem is caused by the wrong start position being used in the contains() method, which means its not checking the last two characters of the word but checks the previous & current position instead:\n\n        } else if ((contains(value, index - 1, 2, \"AS\", \"OS\") || \n\n\n...this should be\n\n        } else if ((contains(value, value.length() - 2, 2, \"AS\", \"OS\") || \n\n\nI'll attach a patch for review\n\n"
}