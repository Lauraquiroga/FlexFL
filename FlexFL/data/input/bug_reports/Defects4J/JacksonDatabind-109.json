{
    "title": "<code>WRITE_BIGDECIMAL_AS_PLAIN</code> is ignored if <code>@JsonFormat</code> is used",
    "description": "\nI am trying to serialize BigDecimal as json string while avoiding scientific notation (kotlin):\ndata class Test(\n    @JsonFormat(shape= JsonFormat.Shape.STRING)\n    val value: BigDecimal\n)\n\nfun main() {\n    val mapper = jacksonObjectMapper()\n        .configure(JsonGenerator.Feature.WRITE_BIGDECIMAL_AS_PLAIN, true)\n    val test = Test(0.0000000005.toBigDecimal())\n    println(mapper.writeValueAsString(test))\n}\noutput {\"value\":\"5.0E-10\"}\nIf  JsonFormat is removed, then WRITE_BIGDECIMAL_AS_PLAIN works and output is {\"value\":0.00000000050} (json number, not string), but trying to make it json string with JsonFormat results in WRITE_BIGDECIMAL_AS_PLAIN being ignored.\nUsing latest version, jackson-bom:2.9.8\n"
}